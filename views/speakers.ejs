<!doctype html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" id="viewport" content="width=device-width,minimum-scale=1.0,maximum-scale=1.0,initial-scale=1.0">
    <link href='http://fonts.googleapis.com/css?family=Asap' rel='stylesheet' type='text/css'>
    <link rel="stylesheet" href="/css/style.css">
    <title><%=pageTitle%></title>
    <% include snips/analytics.ejs %>
</head>
<body>

  <% include snips/logo.ejs %>
  <% include snips/menu.ejs %>

    <article class="wrap">
        <h1>Speakers</h1>
        <p>There will be in total 16 speakers during the two main days of Web Rebels. Please note that we also run an <a href="/openmic/">Open Mic Night</a> where you as an attendee can be the speaker.</p>

        <div class="separator"></div>

        <a name="addy"></a>
        <div class="speaker">
            <img class="imageFrame" height="140" width="140" alt="Addy Osmani" src="../gfx/speaker_addy.jpg">
            <h2>Addy Osmani</h2>
            <p><a href="https://twitter.com/addyosmani">Addy</a> is a Developer Programs Engineer at Google who prolifically speaks and writes about JavaScript on a weekly basis. His material covers everything from building large-scale applications to using polyfills to bring the web's latest hotness to older browsers.</p>
            <p>Whilst Addy loves writing, his true passion is in helping move the web (even a little) forward. He's the lead engineer on Yeoman, contributes to Bower and has created projects like TodoMVC, Aura and Basket.js.</p>
            <p>Addy was with us last year also and you can still see his excellent talk, <a href="http://vimeo.com/44100359">JavaScript Decoupling Vs. The World</a>, in our video pool.</p>

            <h3>Gone in 60 frames per second</h3>
            <p>What’s stopping your web pages from getting silky smooth scrolling, buttery animation and a user experience that’s snappy and fast? Jank-free rendering performance has been shown to positively affect user engagement and experience in many large sites, but remains an area many are unaware of how to diagnose or optimize.</p>
            <p>To highlight how widespread rendering is a performance bottleneck, we're going to walk through a detailed case study of Pinterest.com. Learn about common paint issues in modern sites and equally as importantly - how to diagnose them. We'll also look at changes Interest made to get up to a 40% improvement in rendering times.</p>
            <p>By the end if this session you'll be equipped with the knowledge to see a number of performance diagnosis features in Chrome DevTools to find and fix rendering issues in your own sites.</p>
        </div>

        <div class="separator"></div>

        <a name="brian"></a>
        <div class="speaker">
            <img class="imageFrame" height="140" width="140" alt="Brian Ford" src="../gfx/speaker_brian.jpg">
            <h2>Brian Ford</h2>
            <p><a href="https://twitter.com/briantford">Brian Ford</a> has been programming for as long as he can remember and involved in web technology for nearly 8 years. He is not only a member of the <a href="http://angularjs.org/">AngularJS</a> and <a href="http://yeoman.io/">Yeoman core teams</a>, but also <a href="http://briantford.com/blog.rss">blogs extensively</a>. Brian is currently finishing up his degree at the University of Michigan, after which he will continue working on the Angular team at Google.</p>

            <h3>Improving Your Workflow with Yeoman</h3>
            <p>Writing a web application used to be tremendously difficult. Within the last few years, things have improved significantly. Libraries like jQuery, Moderizr, and HTML5 Boilerplate help eliminate browser inconsistencies and promote best practices. Frameworks like AngularJS, Backbone.js, and Ember.js help manage application lifecycle and allow developers to work at a higher level of abstraction.</p>
            <p>Still, there's a lot of room to grow. For instance, bringing all of these different pieces together and configuring them is daunting for even an experienced developer. <a href="http://yeoman.io/">Yeoman</a> can help solve this issue and fill a vital gap in the web development workflow. This talk will cover using Yeoman to scaffold a web application with an eye for improving productivity and eliminating common web development annoyances.</p>
        </div>

        <div class="separator"></div>

        <a name="bodil"></a>
        <div class="speaker">
            <img class="imageFrame" height="140" width="140" alt="Bodil Stokke" src="../gfx/speaker_bodil.jpg">
            <h2>Bodil Stokke</h2>
            <p><a href="http://bodil.org/">Bodil</a> is a developer, frequent speaker and occasional teacher of web technology and the dark realm of Lisp. She is currently leading the web dev team at <a href="http://arktekk.no/">Arktekk</a>. She is best known as the creator of the <a href="http://catnipide.com/">Catnip IDE</a>, and for her contributions to the field of programming language theory, especially the <a href="http://bodil.org/coffeescript/#the-secret-slide">Facial Hair Theory of Language Design</a>. She holds a doctorate in Metaphysics from <a href="http://www.themonastery.org/catalog/drofmetaphysicscertificate-p-116.html">ULC</a>, and her favourite pony is <a href="http://www.youtube.com/watch?v=cDuG95DXbw8">Rainbow Dash</a>.</p>

            <h3>What Every Hipster Should Know About Functional Programming</h3>
            <p>Different programming paradigms serve different purposes. Systems programmers prefer tools that are dumb, imperative and close to the metal. Enterprise programmers prefer tools which foster complexity, increasing billable hours and the client's dependency on the developer.</p>
            <p>And, let me just come clean and admit it, functional programmers do it for that delicious feeling of superiority that comes from looking down your nose at the normals in their caves banging together for loops and mutable state to make fire.</p>
            <p>Treat yourself to a crash course in the vocabulary of functional programming: higher order functions, combinators, the infinite opportunities to throw the word "monad" in the face of anyone who thinks an ironic moustache is enough to justify all that self-assured smugness these days. You'll never have to lose a programming argument again once you've learned where to casually toss terms like "applicative functor" and "Kleisli triple" into the conversation.</p>
            <p>This is the War of the Hipsters. Arm yourself now, before it goes mainstream.</p>
        </div>

        <div class="separator"></div>

        <a name="david"></a>
        <div class="speaker">
            <img class="imageFrame" height="140" width="140" alt="David Nolen" src="../gfx/speaker_david.jpg">
            <h2>David Nolen</h2>
            <p><a href="http://dosync.posterous.com/">David Nolen</a> is a JavaScript developer at The New York Times and helps run the <a href="http://kitchentablecoders.com/">Kitchen Table Coders</a> workshops in Brooklyn. David spends far too much of his free time having fun hacking on <a href="https://github.com/clojure/core.logic">core.logic</a>, <a href="https://github.com/clojure/core.match">core.match</a>, and <a href="https://github.com/clojure/clojurescript">ClojureScript</a>.</p>

            <h3>ClojureScript: Lisp's Revenge</h3>
            <p>More than 55 years ago John McCarthy had an insanely great idea called Lisp. Lisp marked the beginning of functional programming, interpreters, high-level metaprogramming, garbage collection, and much more. Yet after such auspicious beginnings the idea of Lisp has since faded and many of its innovations have been adopted by much more popular programming languages. Until recently Lisp even appeared doomed to fade into obscurity but several things have conspired to make Lisp somewhat cool again - one of these is Clojure, a fun modern Lisp targeting the Java Virtual Machine.</p>
            <p>However the Web doesn't speak JVM bytecodes. It speaks JavaScript - thus the cornucopia of languages that now compile to JavaScript. The most well known include GWT, CoffeeScript, and more recently Dart and TypeScript. However none of these represent a real break from the status quo.</p>
            <p>John McCarthy's insanely great idea still has a lot to offer the Web and we'll see how with ClojureScript, an implementation of Clojure that targets JavaScript.</p>
        </div>

        <div class="separator"></div>

        <a name="dominic"></a>
        <div class="speaker">
            <img class="imageFrame" height="140" width="140" alt="Dominic Tarr" src="../gfx/speaker_dominic.jpg">
            <h2>Dominic Tarr</h2>
            <p>Dominic is a self-styled "Mad Scientist" of javascript, most well known for his work on <a href="https://github.com/dominictarr/through">streams</a> and real-time <a href="https://github.com/dominictarr/scuttlebutt">distributed systems</a>, but is now getting into javascript database development with <a href="https://github.com/dominictarr/level-sublevel">leveldb</a>.</p>
            <p>Dominic is happily being fed by irish development house / mad-science laboratory, nearform.</p>

            <h3>Streams, Events, and Data</h3>
            <p>A stream is a structure that allows you to represent the time-based aspects of your program. You can use streams to get closer to the bound of performance by acting as soon as possible, processing incrementally, or staying within resource limits my slowing down when necessary.</p>
            <p>But streams are not just about performance - they are also an abstraction that can closely map how data moves through your program - in the long term this is even more important!</p>
        </div>

        <div class="separator"></div>

        <a name="felix"></a>
        <div class="speaker">
            <img class="imageFrame" height="140" width="140" alt="Felix Geisendörfer" src="../gfx/speaker_felix.jpg">
            <h2>Felix Geisendörfer</h2>
            <p>Felix Geisendörfer, is a programmer and entrepreneur living in Berlin. He was one of the first users and core contributors of <a href="http://nodejs.org/">node.js</a>, and has used it to start a business, implement the <a href="https://github.com/felixge/node-mysql">MySQL wire protocol</a>, and program <a href="http://nodecopter.com/">flying robots</a>. His latest passion is <a href="http://golang.org/">Go</a>, which he is currently using to build an open source file upload server called tus.</p>

            <h3>tus.io - Squeezing Cats Through Tiny Mobile Tubes</h3>
            <p>The internet has a problem. With the rise of HD cameras, videos and images keep getting bigger and bigger. Unfortunately that makes it much harder to upload them through unreliable mobile networks. As a result, millions of cat videos and images are lost due to network errors every year.</p>
            <p>The solutions are obvious, but unfortunately there is a distinct lack of interoperable software and protocols to make resumable file uploads a no-brainer for everybody.</p>
            <p><a href="http://tus.io">tus.io</a> is an open source project that's here to change this! We are working on an open protocol, along with client and server implementations for all plattforms to make sure no upload will ever be lost in the tubes again.</p>
            <p>This talk will go over the technical problems and browser APIs for performing resumable uploads, and also look at improving upload speeds.</p>
        </div>

        <div class="separator"></div>

        <a name="garann"></a>
        <div class="speaker">
            <img class="imageFrame" height="140" width="140" alt="Garann Means" src="../gfx/speaker_garann.jpg">
            <h2>Garann Means</h2>
            <p><a href="http://garann.com/">Garann</a> is a JavaScript developer from Austin, Texas, USA. Before switching back to the front-end, she worked for many years as a back-end and full-stack developer. She is the author of <a href="http://shop.oreilly.com/product/0636920023258.do">Node for Front-End Developers</a>, and is the organizer of <a href="http://www.meetup.com/Austin-All-Girl-Hack-Night/">Austin All-Girl Hack Night</a> and <a href="http://www.meetup.com/Girl-Develop-It-Austin/">Girl Develop It Austin</a>.</p>

            <h3>contenteditable: Roll for sanity</h3>
            <p>You may have heard that the contenteditable attribute is part of HTML5. Great news! We can edit almost anything, almost anywhere, without needing to swap in a messy-looking textarea.</p>
            <p>However, the history of contenteditable is longer and darker than its most recent implementations. The contenteditable attribute opens the door to a world that has driven developers to madness. We'll talk about the horror - and the power - that lives in the shadows of the browser. We'll go beyond merely replacing text and edit HTML on the fly, work with selected text, and even try to position the cursor.</p>
            <p>If our sanity survives, we'll master contenteditable elements.</p>
        </div>

        <div class="separator"></div>

        <a name="jan"></a>
        <div class="speaker">
            <img class="imageFrame" height="140" width="140" alt="Jan Lenhardt" src="../gfx/speaker_jan.jpg">
            <h2>Jan Lehnardt</h2>
            <p><a href="http://jan.prima.de/">Jan Lehnardt</a> is an Open Source developer. He works on all parts of the web stack and tries to make things easier for everyone. He’s a core contributor to <a href="http://couchdb.apache.org/">Apache CouchDB</a>, a co-curator for <a href="http://jsconf.eu">JSConf EU</a> and lives in Berlin.</p>

            <h3>Topic:</h3>
            <p>To be revealed soon!</p>
        </div>

        <div class="separator"></div>

        <a name="magnar"></a>
        <div class="speaker">
            <img class="imageFrame" height="140" width="140" alt="Magnar Sveen" src="../gfx/speaker_magnar.jpg">
            <h2>Magnar Sveen</h2>
            <p>Magnar is a happy frontend developer with a crush on functional programming and lisps. He's done quite a few talks and courses on test-driven JavaScript development, as well as a screencast series on the topic in Norwegian at <a href="http://zombietdd.com">ZombieTDD</a>. He is also the voice behind <a href="http://emacsrocks.com">Emacs Rocks!</a>, and was at the WebRebels 2012 <a href="/openmic/">open-mic night</a> announced as the second coming of Emacs.</p>

            <h3>Emacs Rocks! Webdev special</h3>
            <p>A high speed tour through some pretty darn snazzy features of Emacs when developing for the web. Even if you're not looking to change editors any time soon, this talk should have you hacking at your own editor in the following break. </p>
        </div>

        <div class="separator"></div>

        <a name="marius"></a>
        <div class="speaker">
            <img class="imageFrame" height="140" width="140" alt="Marius Gundersen" src="../gfx/speaker_marius.jpg">
            <h2>Marius Gundersen</h2>
            <p>Marius Gundersen is a frontend consultant with Ciber Norge AS, where he focuses on web and mobile development. Marius has more than a decades experience tinkering and playing with web technology, and enjoys sharing his knowledge through talks and presentations. More information on the projects he has worked on can be found at <a href="http://mariusgundersen.net">his website</a>.</p>

            <h3>Building Maintainable JavaScript Applications</h3>
            <p>How long can a JavaScript app live without being maintained? How long until the browsers it was designed for is outdated? How long until bugs have to be fixed or new functionality is needed? And will the developer tasked with these jobs remember or understand how the application works?</p>
            <p>Writing JavaScript code is fast and easy, but reading that code is often slow and difficult. By writing code which is easy to read and understand we get an application which is straight forward to debug and improve. This makes the application maintainable, and now anyone can go in and quickly fix or extend it.</p>
            <p>In this talk I want to focus on maintainable JavaScript applications. Together we will write a such an application using a collection of frameworks including Knockout.js and Require.js. We will look at some of the high and low level principles of maintainable code and how the architecture of our client side app can help make it easy to read, understand, debug and test. </p>
        </div>

        <div class="separator"></div>

        <a name="mario"></a>
        <div class="speaker">
            <img class="imageFrame" height="140" width="140" alt="Dr.-Ing. Mario Heiderich" src="../gfx/speaker_mario.jpg">
            <h2>Dr.-Ing. Mario Heiderich</h2>
            <p><a href="http://mario.heideri.ch/">Mario Heiderich</a> is a Microsoft security contractor and founder of the German/UK pen-test outfit <a href="http://cure53.de/">Cure53</a>. He focuses on HTML5, SVG security and believes XSS can be eradicated by using JavaScript. Maybe. Some day.</p>
            <p>Mario invoked the <a href="http://html5sec.org/">HTML5 security cheat-sheet</a> and maintains the Crawly project. In his spare time he delivers trainings and security consultancy for larger German and international companies for sweet sweet money and the simple minded fun in breaking things.</p>
            <p>Mario has spoken on a large variety of international conferences, co-authored two books, several academic papers and doesn’t see a problem in his one-point-five year old son having a tablet already.</p>

            <h3>The innerHTML Apocalypse - How mXSS attacks change everything we believed to know so far</h3>
            <p>This talk introduces and discusses a novel, mostly unpublished technique to attack websites that are applied with state-of-the-art XSS protection. This attack labeled Mutation-XSS (mXSS) is capable of bypassing high-end filter systems by utilizing the browser and its often unknown capabilities - every single one of them.</p>
            <p>We analyzed the type and number of websites that are affected by this kind of attack. Several live demos during the presentation will share these impressions and help understanding, what mXSS is, why mXSS is possible and why it is of importance for defenders as well as professional attackers to be understood and researched even further.</p>
            <p>The talk wraps up several years of research on this field, shows the abhorrent findings, discusses the consequences and delivers a step-by-step guide on how to protect against this kind of mayhem - with a strong focus on feasibility and scalability.</p>
        </div>

        <div class="separator"></div>

        <a name="max"></a>
        <div class="speaker">
            <img class="imageFrame" height="140" width="140" alt="Max Ogden" src="../gfx/speaker_max.jpg">
            <h2>Max Ogden</h2>
            <p>Max Ogden is a JavaScript programmer who lives in Oakland, CA, home of the <a href="http://nodejs.org/">Node.js</a> project. Some previous projects include <a href="http://codeforamerica.org/">Code for America</a>, <a href="http://jsforcats.com/">JavaScript for Cats</a>, <a href="http://tacoconf.com/">TacoConf</a> and most recently <a href="http://voxeljs.com/">Voxel.js</a>, a WebGL voxel rendering engine.</p>

            <h3>Minecraft in the browser</h3>
            <p>In January 2013 I started the <a href="http://voxeljs.com">Voxel.js project</a>. Since then we have generated nearly 100 node modules related to 3D game development and distribution, e.g. voxel rendering and first person controls and physics. In the main module (voxel-engine) I've received 50 pull requests from 20 contributors.</p>
            <p>I'd like to talk about why voxel.js has been successful from an open source standpoint (open from the beginning) and also show off some fun 3D demos and inspire people to take up game development in JS.</p>
        </div>

        <div class="separator"></div>

        <a name="pawel"></a>
        <div class="speaker">
            <img class="imageFrame" height="140" width="140" alt="Pawel Kozlowski" src="../gfx/speaker_pawel.jpg">
            <h2>Pawel Kozlowski</h2>
            <p>Pawel Kozlowski enjoys hacking on both back-end and front-end. During his career he was fortunate enough to use multitude of technologies, programming languages and tools but recently focuses on the front-end web development with <a href="http://angularjs.org/">AngularJS</a>.</p>
            <p>Pawel strongly believes in free, open source software. He is very active in the AngularJS community and last year he was honored with the commiter privilege to the AngularJS project. He also contributes to <a href="http://angular-ui.github.io/bootstrap/">Angular-UI</a> - the companion suite to the AngularJS framework.</p>
            <p>When not coding Pawel sharpens his writing skills and now he finishes a <a href="http://www.packtpub.com/angularjs-web-application-development/book.">book about web application development with AngularJS</a>. You can also find him spreading a good word about AngularJS at various conferences.</p>

            <h3>AngularJS: teaching browsers new tricks</h3>
            <p>This talk will familiarize you with AngularJS JavaScript framework and its revolutionary approach to writing single-page web applications. AngularJS is unique in many ways with its DOM-based, declarative templating, ability to extend HTML vocabulary and strong focus on testing.</p>
            <p>AngularJS will be introduced by contrasting it with traditional approaches and showing benefits of the AngularJS-way (extremely concise yet readable code, testability and most importantly – making web development fun again!). This will be an interactive talk with plenty of code examples.</p>
        </div>

        <div class="separator"></div>

        <a name="reginald"></a>
        <div class="speaker">
            <img class="imageFrame" height="140" width="140" alt="Reginald Braithwaite" src="../gfx/speaker_reginald.jpg">
            <h2>Reginald Braithwaite</h2>
            <p><a href="http://braythwayt.com/">Reginald Braithwaite</a> has more than twenty years of hands-on experience creating software products. He applies his Ruby, JavaScript, CoffeeScript, and advanced programming expertise to crafting well-factored and maintainable code. He speaks and <a href="https://github.com/raganwald/homoiconic">writes</a> about not-so-big design and dynamic meta-programming. Open source accomplishments include <a href="http://recursiveuniver.se/docs/cafeaulife.html">Cafe au Life</a> and <a href="https://github.com/raganwald/YouAreDaChef">YouAreDaChef</a>, in JS/CS, the <a href="http://andand.rubyforge.org/">andand gem for Ruby</a>, and the <a href="https://github.com/raganwald/JQuery-Combinators">jQuery Combinators plugin</a>.</p>

            <h3>I have a good feeling about this - Why tooling is poised to make the jump to hyperspace.</h3>
            <p>Historically, application and tooling capabilities have advanced in tandem. Today, application technology has progressed far ahead of tooling technology in areas such as collaboration, big data, and social scale. There's a large and exciting opportunity to advance tooling and bring balance to the technology force.</p>
        </div>

        <div class="separator"></div>

        <a name="rob"></a>
        <div class="speaker">
            <img class="imageFrame" height="140" width="140" alt="Rob Hawkes" src="../gfx/speaker_rob.jpg">
            <h2>Rob Hawkes</h2>
            <p>Rob loves solving problems through code. He’s a Digital Tinkerer, former Technical Evangelist at Mozilla, author of Foundation HTML5 Canvas, and a Brit. You can find out more about him on <a href="http://twitter.com/robhawkes">Twitter</a> and his <a href="http://rawkes.com">blog</a>.</p>

            <h3>The State of WebRTC</h3>
            <p>WebRTC brings peer-to-peer networking to the browser. But what is it? How does it work? How do you use it? And what are others doing with it? In this talk, Rob covers the current state of WebRTC, outlines how to use it, and shows off some of the amazing things that it can do beyond video chat.</p>
        </div>

        <div class="separator"></div>

        <a name="robert"></a>
        <div class="speaker">
            <img class="imageFrame" height="140" width="140" alt="Robert Nyman" src="../gfx/speaker_robert.jpg">
            <h2>Robert Nyman</h2>
            <p><a href="https://twitter.com/robertnyman">Robert</a> is a Technical Evangelist for Mozilla and the Editor of <a href="https://hacks.mozilla.org/">Mozilla Hacks</a>. He's a strong believer in HTML5 and the Open Web, has been working since 1999 with Front End development for the web - in Sweden and in New York City. He regularly <a href="http://robertnyman.com">blogs</a> and loves to travel and meet people.</p>

            <h3>What are you going to do with your life?</h3>
            <p>Robert will talk - from a developer perspective - on how you choose to spend your life and efforts, what you want to work with and why.</p>
        </div>

    </article>

    <% include snips/footer.ejs %>

</body>
</html>
